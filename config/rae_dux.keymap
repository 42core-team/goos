/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Into_the_breach {
            bindings = <&tog 5>;
            key-positions = <9 29>;
        };

        Gamepad {
            bindings = <&tog 4>;
            key-positions = <8 28>;
        };

        ITB_Space {
            bindings = <&kp SPACE>;
            key-positions = <11 12 13>;
            layers = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_layer {
            bindings = <
&kp Q            &kp W         &kp F              &kp P        &kp B                              &kp J           &kp L        &kp U               &kp Y         &kp SEMI
&hrm LEFT_ALT A  &hrm LCTRL R  &hrm LEFT_SHIFT S  &hrm LGUI T  &kp G                              &kp M           &hrm LGUI N  &hrm RIGHT_SHIFT E  &hrm LCTRL I  &hrm RIGHT_ALT O
&kp Z            &kp X         &kp C              &kp D        &kp V                              &kp K           &kp H        &kp COMMA           &kp DOT       &kp SLASH
                                                  &kp ESC      &lt 2 SPACE  &kp TAB    &kp ENTER  &lt_repeat 1 0  &kp BSPC
            >;
        };

        Symbol {
            bindings = <
&none                &kp BACKSLASH    &kp CARET             &kp PERCENT     &none                        &none     &kp DQT         &kp EXCL               &kp HASH         &none
&hrm LEFT_ALT MINUS  &hrm LCTRL LBRC  &hrm LEFT_SHIFT LBKT  &hrm LGUI LPAR  &kp TILDE                    &kp PIPE  &hrm LGUI RPAR  &hrm RIGHT_SHIFT RBKT  &hrm LCTRL RBRC  &hrm RIGHT_ALT EQUAL
&none                &kp GRAVE        &kp UNDER             &kp AT          &none                        &none     &kp SQT         &kp AMPS               &kp DOLLAR       &none
                                                            &kp ESC         &mo 2      &kp TAB    &none  &none     &none
            >;

            label = "symbol_layer";
        };

        Numbers_Navigation {
            bindings = <
&none             &kp N6         &kp N5              &kp N4        &kp MINUS                      &kp C_BRI_UP  &kp C_MUTE      &kp C_VOLUME_DOWN    &kp C_VOLUME_UP   &none
&hrm LEFT_ALT N0  &hrm LCTRL N3  &hrm LEFT_SHIFT N2  &hrm LGUI N1  &kp PLUS                       &kp LEFT      &hrm LGUI DOWN  &hrm RIGHT_SHIFT UP  &hrm LCTRL RIGHT  &kp RIGHT_ALT
&none             &kp N9         &kp N8              &kp N7        &kp STAR                       &kp C_BRI_DN  &kp C_PREV      &kp C_PP             &kp C_NEXT        &none
                                                     &none         &none      &none    &kp ENTER  &mo 1         &kp BSPC
            >;

            label = "numb_nav_layer";
        };

        Tri {
            bindings = <
&bootloader   &none  &none  &none  &none                  &none  &none           &none  &none  &bootloader
&bt BT_SEL 0  &none  &none  &none  &none                  &none  &kp LG(LS(N4))  &none  &none  &none
&bt BT_CLR    &none  &none  &none  &none                  &none  &none           &none  &none  &none
                            &none  &none  &none    &none  &none  &none
            >;

            label = "tri_layer";
        };

        gamepad {
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E      &kp R                      &none  &kp L     &kp UP    &kp R      &none
&kp TAB  &kp A  &kp S  &kp D      &kp F                      &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&none    &kp Y  &kp X  &kp C      &none                      &none  &kp S     &none     &kp E      &none
                       &kp LSHFT  &kp SPACE  &none    &kp B  &kp A  &none
            >;
        };

        Into_the_breach {
            bindings = <
&none           &none  &none   &none   &none                  &none  &none  &none  &none  &none
&kp LEFT_SHIFT  &kp R  &kp N2  &kp N1  &none                  &none  &none  &none  &none  &none
&none           &none  &none   &none   &none                  &none  &none  &none  &none  &none
                               &kp S   &kp A  &kp D    &none  &none  &none
            >;

            label = "itb_layer";
        };
    };
};
